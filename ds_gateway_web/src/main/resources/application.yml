## 指定默认激活的环境配置
server:
  port: 8088
  connection-timeout: 1800000
  servlet:
    session:
      timeout: 7200s
  compression:  # 配置返回结果为压缩格式
    enabled: true
    min-response-size: 500

# 调试 tomcat:
#    max-threads: 1
swagger:
  enable: false

spring:
  servlet:
    multipart:
      max-request-size: 1024MB
      max-file-size: 500MB
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  messages:
    encoding: UTF-8
  profiles:
    active: auth-prod, prod
  application:
    name: '@name@'
  cache:
    cache-names: metadata,cache_common
    caffeine:
      spec: maximumSize=500 , expireAfterWrite=1800s

  ##datasource
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 数据源其他配置
      initialSize: 0
      minIdle: 1
      maxActive: 100
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 合并多个数据源监控信息
      useGlobalDataSourceStat: true
      # statu 监控统计，'wall'用于防御sql注入
      filters: stat,wall,slf4j
      stat-view-servlet:
        url-pattern: /inf-druid/*
        login-username: inf-db
        login-password: inf2018
      filter:
        stat:
          merge-sql: true
          log-slow-sql: true
          slow-sql-millis: 1000
        slf4j:
          enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false

version: '@version@'
session:
  key:
    user: user

management:
  server:
    port: 10106
  metrics:
    export:
      prometheus:
        enabled: true
        step: 1m
        descriptions: true
  web:
    server:
      request:
        autotime:
          enabled: true
        metric-name: http_process_time
  endpoints:
    prometheus:
      id: springmetrics
    web:
      base-path: /
      path-mapping:
        prometheus: metrics
      exposure:
        include: prometheus

## mapper配置
mapper:
  not-empty: false
  identity: MYSQL

mybatis:
  configuration:
    map-underscore-to-camel-case: true

license:
  subject: Ninebot
  publicAlias: publicCert
  storePass: Ninebot#20230808
  licensePath: /Users/shareit/work/code/env/license/license.lic
  publicKeysStorePath: /Users/shareit/work/code/env/license/publicCerts.keystore

tenant:
  name: ninebot